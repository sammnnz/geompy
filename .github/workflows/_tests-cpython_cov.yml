name: _Tests cpython coverage

on:
    push:
        branches: [te-*]
    workflow_dispatch:

jobs:
    cov:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup Python 3.9
          uses: actions/setup-python@v2
          with:
            python-version: 3.9
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -e .[testing] --verbose
        - name: Check gcc, gcov
          run: |
            gcc --version
            gcov --version
          shell: bash
        - name: Build extension
          run: |
            CFLAGS="--coverage" python3 setup.py build_ext --inplace --verbose
        - name: C coverage report
          run: |
            pytest --cov-config=./.coveragerc --verbose --color=yes --cov=geompy
            find ${{github.workspace}}
            gcov -b -r `find ./build -type f -name "*.o"`
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v5
          with:
            gcov: true
            fail_ci_if_error: true
            flags: cpy-3.9
            name: unittests
            slug: sammnnz/geompy
            token: ${{ secrets.CODECOV_TOKEN }}
            verbose: true
#        - name: Checks
#          run: |
#            CFLAGS='--coverage --std=c99 -Wall -g3 -O0 --verbose'
#            include='${{env.pythonLocation}}/include/python3.9' # default: Ubuntu
#            ext='so'                                            # default: Ubuntu
#            if [[ '' =~ ^windows.* ]]; then
#                include='${{env.pythonLocation}}/include'
#                ext='pyd'
#            fi
#            libfile=`find build -type f -name *.$ext`
#            libfile_wo_ext=`basename $libfile .$ext`
#            libpath=`dirname $libfile`
#            LIBS='-lpython3.9 -l$libfile_wo_ext'                              # default: Ubuntu
#            if [[ '' =~ ^windows.* ]]; then
#                LIBPATHS='-lpython39 -l$libfile_wo_ext'
#            fi
#            gcc $CFLAGS -c tests/cpython/c/test__geompy.c -o tests/cpython/c/test__geompy.o -I"$include"
#            gcc $CFLAGS -o tests/cpython/c/test__geompy tests/cpython/c/test__geompy.o -L${{env.LD_LIBRARY_PATH}} -L"/$libpath" $LIBS
#            ./tests/cpython/c/test__geompy
#            find ${{github.workspace}}/build
#            find ${{github.workspace}}/tests
#          shell: bash